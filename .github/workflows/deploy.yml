name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug - Comprehensive Path Analysis
      run: |
        echo "=== GITHUB CONTEXT ==="
        echo "Repository: ${{ github.repository }}"
        echo "Workspace: ${{ github.workspace }}"
        echo "Runner workspace: $GITHUB_WORKSPACE"
        echo ""
        echo "=== CURRENT DIRECTORY ==="
        pwd
        echo ""
        echo "=== ROOT DIRECTORY CONTENTS ==="
        ls -la
        echo ""
        echo "=== SEARCHING FOR KEY FILES ==="
        echo "package.json:" 
        find . -name "package.json" -type f | head -5
        echo "yarn.lock:"
        find . -name "yarn.lock" -type f | head -5
        echo ".yarnrc.yml:"
        find . -name ".yarnrc.yml" -type f | head -5
        echo ""
        echo "=== FILE CONTENTS CHECK ==="
        if [ -f "package.json" ]; then
          echo "✅ package.json found at root"
          head -3 package.json
        else
          echo "❌ package.json NOT found at root"
        fi
        if [ -f "yarn.lock" ]; then
          echo "✅ yarn.lock found at root"
        else
          echo "❌ yarn.lock NOT found at root"
        fi
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Enable Corepack
      run: |
        corepack enable
        yarn --version
        
    - name: Install dependencies
      run: |
        echo "Installing from: $(pwd)"
        if [ -f "yarn.lock" ]; then
          echo "✅ Found yarn.lock, proceeding with install"
          # Remove --frozen-lockfile to allow lockfile updates if needed
          yarn install
        else
          echo "❌ yarn.lock not found in $(pwd)"
          ls -la
          exit 1
        fi
        
    - name: Build application
      run: |
        echo "Building from: $(pwd)"
        yarn build
        
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
